"use strict";(self.webpackChunkagridocs=self.webpackChunkagridocs||[]).push([[927],{1398:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=e(5893),i=e(1151);const o={},r="Mutation",s={id:"customization/mutation",title:"Mutation",description:"Mutations are a method to grow new plant breeds from two existing plants. AgriCraft includes default mutations for various plants, which can be modified, and new mutations can also be added.",source:"@site/docs/customization/mutation.md",sourceDirName:"customization",slug:"/customization/mutation",permalink:"/docs/customization/mutation",draft:!1,unlisted:!1,editUrl:"https://github.com/AgriCraft/agricraft.github.io/tree/main/docs/customization/mutation.md",tags:[],version:"current",frontMatter:{},sidebar:"customizationSidebar",previous:{title:"Plant",permalink:"/docs/customization/plant"},next:{title:"Soil",permalink:"/docs/customization/soil"}},c={},d=[];function u(t){const n={code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"mutation",children:"Mutation"}),"\n",(0,a.jsx)(n.p,{children:"Mutations are a method to grow new plant breeds from two existing plants. AgriCraft includes default mutations for various plants, which can be modified, and new mutations can also be added."}),"\n",(0,a.jsxs)(n.p,{children:["To create a mutation, add a new JSON file in the directory ",(0,a.jsx)(n.code,{children:"data/<namespace>/agricraft/mutations/<mutation_id>.json"}),", where ",(0,a.jsx)(n.code,{children:"namespace"})," is the namespace and ",(0,a.jsx)(n.code,{children:"mutation_id"})," is the ID of this mutation, which can be whatever you want."]}),"\n",(0,a.jsx)(n.p,{children:"There can be multiple mutations for the same plant, as long as the ID of each mutation is different."}),"\n",(0,a.jsx)(n.p,{children:"Every mutation must have the following structure:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"chance"}),": chance of the mutation occurring on any given random tick. ",(0,a.jsx)(n.em,{children:"[range 0.0-1.0]"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"child"}),": ID of the plant resulting from the mutation."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"parent1"})," and ",(0,a.jsx)(n.code,{children:"parent2"}),": IDs of parents needed for the mutation."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The example below shows a mutation of sugar cane and melon that results in the creation of poppy:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\r\n  "chance": 0.75,\r\n  "child": "minecraft:poppy",\r\n  "parent1": "minecraft:sugar_cane",\r\n  "parent2": "minecraft:melon"\r\n}\n'})})]})}function l(t={}){const{wrapper:n}={...(0,i.a)(),...t.components};return n?(0,a.jsx)(n,{...t,children:(0,a.jsx)(u,{...t})}):u(t)}},1151:(t,n,e)=>{e.d(n,{Z:()=>s,a:()=>r});var a=e(7294);const i={},o=a.createContext(i);function r(t){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),a.createElement(o.Provider,{value:n},t.children)}}}]);